### YamlMime:ManagedReference
items:
- uid: Tide.VendorSdk.Configuration.ConfigurationExtensions
  commentId: T:Tide.VendorSdk.Configuration.ConfigurationExtensions
  id: ConfigurationExtensions
  parent: Tide.VendorSdk.Configuration
  children:
  - Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  - Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  langs:
  - csharp
  - vb
  name: ConfigurationExtensions
  nameWithType: ConfigurationExtensions
  fullName: Tide.VendorSdk.Configuration.ConfigurationExtensions
  type: Class
  source:
    remote:
      path: Tide/Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ConfigurationExtensions
    path: ../../Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
    startLine: 9
  assemblies:
  - Tide.VendorSdk
  namespace: Tide.VendorSdk.Configuration
  syntax:
    content: public static class ConfigurationExtensions
    content.vb: Public Module ConfigurationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  commentId: M:Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  id: UseSqlServerStorage(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  isExtensionMethod: true
  parent: Tide.VendorSdk.Configuration.ConfigurationExtensions
  langs:
  - csharp
  - vb
  name: UseSqlServerStorage(ITideConfiguration, String)
  nameWithType: ConfigurationExtensions.UseSqlServerStorage(ITideConfiguration, String)
  fullName: Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage(Tide.VendorSdk.Configuration.ITideConfiguration, System.String)
  type: Method
  source:
    remote:
      path: Tide/Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: UseSqlServerStorage
    path: ../../Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
    startLine: 11
  assemblies:
  - Tide.VendorSdk
  namespace: Tide.VendorSdk.Configuration
  syntax:
    content: public static ITideConfiguration UseSqlServerStorage(this ITideConfiguration configuration, string connectionString)
    parameters:
    - id: configuration
      type: Tide.VendorSdk.Configuration.ITideConfiguration
    - id: connectionString
      type: System.String
    return:
      type: Tide.VendorSdk.Configuration.ITideConfiguration
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseSqlServerStorage(configuration As ITideConfiguration, connectionString As String) As ITideConfiguration
  overload: Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  commentId: M:Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  id: SetEndpoint(Tide.VendorSdk.Configuration.ITideConfiguration,System.String)
  isExtensionMethod: true
  parent: Tide.VendorSdk.Configuration.ConfigurationExtensions
  langs:
  - csharp
  - vb
  name: SetEndpoint(ITideConfiguration, String)
  nameWithType: ConfigurationExtensions.SetEndpoint(ITideConfiguration, String)
  fullName: Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint(Tide.VendorSdk.Configuration.ITideConfiguration, System.String)
  type: Method
  source:
    remote:
      path: Tide/Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: SetEndpoint
    path: ../../Tide.VendorSdk/Configuration/ConfigurationExtensions.cs
    startLine: 20
  assemblies:
  - Tide.VendorSdk
  namespace: Tide.VendorSdk.Configuration
  syntax:
    content: public static ITideConfiguration SetEndpoint(this ITideConfiguration configuration, string endpoint)
    parameters:
    - id: configuration
      type: Tide.VendorSdk.Configuration.ITideConfiguration
    - id: endpoint
      type: System.String
    return:
      type: Tide.VendorSdk.Configuration.ITideConfiguration
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetEndpoint(configuration As ITideConfiguration, endpoint As String) As ITideConfiguration
  overload: Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Tide.VendorSdk.Configuration
  commentId: N:Tide.VendorSdk.Configuration
  name: Tide.VendorSdk.Configuration
  nameWithType: Tide.VendorSdk.Configuration
  fullName: Tide.VendorSdk.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage*
  commentId: Overload:Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage
  name: UseSqlServerStorage
  nameWithType: ConfigurationExtensions.UseSqlServerStorage
  fullName: Tide.VendorSdk.Configuration.ConfigurationExtensions.UseSqlServerStorage
- uid: Tide.VendorSdk.Configuration.ITideConfiguration
  commentId: T:Tide.VendorSdk.Configuration.ITideConfiguration
  parent: Tide.VendorSdk.Configuration
  name: ITideConfiguration
  nameWithType: ITideConfiguration
  fullName: Tide.VendorSdk.Configuration.ITideConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint*
  commentId: Overload:Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint
  name: SetEndpoint
  nameWithType: ConfigurationExtensions.SetEndpoint
  fullName: Tide.VendorSdk.Configuration.ConfigurationExtensions.SetEndpoint
