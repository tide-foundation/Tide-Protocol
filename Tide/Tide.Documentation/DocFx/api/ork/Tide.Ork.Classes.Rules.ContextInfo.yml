### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Classes.Rules.ContextInfo
  commentId: T:Tide.Ork.Classes.Rules.ContextInfo
  id: ContextInfo
  parent: Tide.Ork.Classes.Rules
  children:
  - Tide.Ork.Classes.Rules.ContextInfo.CommandLine
  - Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
  - Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
  - Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
  - Tide.Ork.Classes.Rules.ContextInfo.MachineName
  - Tide.Ork.Classes.Rules.ContextInfo.OSVersion
  - Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
  - Tide.Ork.Classes.Rules.ContextInfo.TickCount
  - Tide.Ork.Classes.Rules.ContextInfo.TickCount64
  - Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
  - Tide.Ork.Classes.Rules.ContextInfo.UserName
  - Tide.Ork.Classes.Rules.ContextInfo.Version
  langs:
  - csharp
  - vb
  name: ContextInfo
  nameWithType: ContextInfo
  fullName: Tide.Ork.Classes.Rules.ContextInfo
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ContextInfo
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 4
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static class ContextInfo
    content.vb: Public Module ContextInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
  id: HasShutdownStarted
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: HasShutdownStarted
  nameWithType: ContextInfo.HasShutdownStarted
  fullName: Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: HasShutdownStarted
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 6
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static bool HasShutdownStarted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property HasShutdownStarted As Boolean
  overload: Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.MachineName
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.MachineName
  id: MachineName
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: MachineName
  nameWithType: ContextInfo.MachineName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.MachineName
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: MachineName
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 7
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string MachineName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property MachineName As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.MachineName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.CommandLine
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.CommandLine
  id: CommandLine
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: CommandLine
  nameWithType: ContextInfo.CommandLine
  fullName: Tide.Ork.Classes.Rules.ContextInfo.CommandLine
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: CommandLine
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 8
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string CommandLine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property CommandLine As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.CommandLine*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.OSVersion
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.OSVersion
  id: OSVersion
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: OSVersion
  nameWithType: ContextInfo.OSVersion
  fullName: Tide.Ork.Classes.Rules.ContextInfo.OSVersion
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: OSVersion
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 9
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string OSVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property OSVersion As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.OSVersion*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
  id: ProcessorCount
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: ProcessorCount
  nameWithType: ContextInfo.ProcessorCount
  fullName: Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ProcessorCount
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 10
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static int ProcessorCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property ProcessorCount As Integer
  overload: Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
  id: Is64BitOperatingSystem
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: Is64BitOperatingSystem
  nameWithType: ContextInfo.Is64BitOperatingSystem
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Is64BitOperatingSystem
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 11
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static bool Is64BitOperatingSystem { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Is64BitOperatingSystem As Boolean
  overload: Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.TickCount
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.TickCount
  id: TickCount
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: TickCount
  nameWithType: ContextInfo.TickCount
  fullName: Tide.Ork.Classes.Rules.ContextInfo.TickCount
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: TickCount
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 12
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static int TickCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property TickCount As Integer
  overload: Tide.Ork.Classes.Rules.ContextInfo.TickCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.TickCount64
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.TickCount64
  id: TickCount64
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: TickCount64
  nameWithType: ContextInfo.TickCount64
  fullName: Tide.Ork.Classes.Rules.ContextInfo.TickCount64
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: TickCount64
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 13
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static long TickCount64 { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Shared ReadOnly Property TickCount64 As Long
  overload: Tide.Ork.Classes.Rules.ContextInfo.TickCount64*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
  id: UserDomainName
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: UserDomainName
  nameWithType: ContextInfo.UserDomainName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: UserDomainName
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 14
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string UserDomainName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property UserDomainName As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.UserDomainName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.UserName
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.UserName
  id: UserName
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: ContextInfo.UserName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.UserName
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: UserName
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 15
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property UserName As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.UserName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.Version
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.Version
  id: Version
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ContextInfo.Version
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Version
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Version
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 16
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Version As String
  overload: Tide.Ork.Classes.Rules.ContextInfo.Version*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
  commentId: P:Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
  id: Is64BitProcess
  parent: Tide.Ork.Classes.Rules.ContextInfo
  langs:
  - csharp
  - vb
  name: Is64BitProcess
  nameWithType: ContextInfo.Is64BitProcess
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/ContextInfo.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Is64BitProcess
    path: ../../Tide.Ork/Classes/Rules/ContextInfo.cs
    startLine: 17
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static bool Is64BitProcess { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Is64BitProcess As Boolean
  overload: Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Tide.Ork.Classes.Rules
  commentId: N:Tide.Ork.Classes.Rules
  name: Tide.Ork.Classes.Rules
  nameWithType: Tide.Ork.Classes.Rules
  fullName: Tide.Ork.Classes.Rules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
  name: HasShutdownStarted
  nameWithType: ContextInfo.HasShutdownStarted
  fullName: Tide.Ork.Classes.Rules.ContextInfo.HasShutdownStarted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Tide.Ork.Classes.Rules.ContextInfo.MachineName*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.MachineName
  name: MachineName
  nameWithType: ContextInfo.MachineName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.MachineName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tide.Ork.Classes.Rules.ContextInfo.CommandLine*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.CommandLine
  name: CommandLine
  nameWithType: ContextInfo.CommandLine
  fullName: Tide.Ork.Classes.Rules.ContextInfo.CommandLine
- uid: Tide.Ork.Classes.Rules.ContextInfo.OSVersion*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.OSVersion
  name: OSVersion
  nameWithType: ContextInfo.OSVersion
  fullName: Tide.Ork.Classes.Rules.ContextInfo.OSVersion
- uid: Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
  name: ProcessorCount
  nameWithType: ContextInfo.ProcessorCount
  fullName: Tide.Ork.Classes.Rules.ContextInfo.ProcessorCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
  name: Is64BitOperatingSystem
  nameWithType: ContextInfo.Is64BitOperatingSystem
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Is64BitOperatingSystem
- uid: Tide.Ork.Classes.Rules.ContextInfo.TickCount*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.TickCount
  name: TickCount
  nameWithType: ContextInfo.TickCount
  fullName: Tide.Ork.Classes.Rules.ContextInfo.TickCount
- uid: Tide.Ork.Classes.Rules.ContextInfo.TickCount64*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.TickCount64
  name: TickCount64
  nameWithType: ContextInfo.TickCount64
  fullName: Tide.Ork.Classes.Rules.ContextInfo.TickCount64
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Tide.Ork.Classes.Rules.ContextInfo.UserDomainName*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
  name: UserDomainName
  nameWithType: ContextInfo.UserDomainName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.UserDomainName
- uid: Tide.Ork.Classes.Rules.ContextInfo.UserName*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.UserName
  name: UserName
  nameWithType: ContextInfo.UserName
  fullName: Tide.Ork.Classes.Rules.ContextInfo.UserName
- uid: Tide.Ork.Classes.Rules.ContextInfo.Version*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.Version
  name: Version
  nameWithType: ContextInfo.Version
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Version
- uid: Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess*
  commentId: Overload:Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
  name: Is64BitProcess
  nameWithType: ContextInfo.Is64BitProcess
  fullName: Tide.Ork.Classes.Rules.ContextInfo.Is64BitProcess
