### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Repo.ICvkManager
  commentId: T:Tide.Ork.Repo.ICvkManager
  id: ICvkManager
  parent: Tide.Ork.Repo
  children:
  - Tide.Ork.Repo.ICvkManager.Confirm(System.Guid)
  langs:
  - csharp
  - vb
  name: ICvkManager
  nameWithType: ICvkManager
  fullName: Tide.Ork.Repo.ICvkManager
  type: Interface
  source:
    remote:
      path: Tide/Tide.Ork/Repo/ICvkManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ICvkManager
    path: ../../Tide.Ork/Repo/ICvkManager.cs
    startLine: 22
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: 'public interface ICvkManager : IManager<CvkVault>'
    content.vb: >-
      Public Interface ICvkManager
          Inherits IManager(Of CvkVault)
  inheritedMembers:
  - Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetAll
  - Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Exist(System.Guid)
  - Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetById(System.Guid)
  - Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.SetOrUpdate(Tide.Core.CvkVault)
  - Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Delete(System.Guid)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Tide.Ork.Repo.ICvkManager.Confirm(System.Guid)
  commentId: M:Tide.Ork.Repo.ICvkManager.Confirm(System.Guid)
  id: Confirm(System.Guid)
  parent: Tide.Ork.Repo.ICvkManager
  langs:
  - csharp
  - vb
  name: Confirm(Guid)
  nameWithType: ICvkManager.Confirm(Guid)
  fullName: Tide.Ork.Repo.ICvkManager.Confirm(System.Guid)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Repo/ICvkManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Confirm
    path: ../../Tide.Ork/Repo/ICvkManager.cs
    startLine: 24
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: Task Confirm(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Confirm(id As Guid) As Task
  overload: Tide.Ork.Repo.ICvkManager.Confirm*
references:
- uid: Tide.Ork.Repo
  commentId: N:Tide.Ork.Repo
  name: Tide.Ork.Repo
  nameWithType: Tide.Ork.Repo
  fullName: Tide.Ork.Repo
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetAll
  commentId: M:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetAll
  parent: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  definition: Tide.Ork.Repo.IManager`1.GetAll
  name: GetAll()
  nameWithType: IManager<CvkVault>.GetAll()
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.GetAll()
  nameWithType.vb: IManager(Of CvkVault).GetAll()
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.GetAll
    name: GetAll
    nameWithType: IManager<CvkVault>.GetAll
    fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.GetAll
    name: GetAll
    nameWithType: IManager(Of CvkVault).GetAll
    fullName: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Exist(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Exist(System.Guid)
  parent: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  definition: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
  name: Exist(Guid)
  nameWithType: IManager<CvkVault>.Exist(Guid)
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.Exist(System.Guid)
  nameWithType.vb: IManager(Of CvkVault).Exist(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: IManager<CvkVault>.Exist
    fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: IManager(Of CvkVault).Exist
    fullName: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetById(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.GetById(System.Guid)
  parent: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  definition: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
  name: GetById(Guid)
  nameWithType: IManager<CvkVault>.GetById(Guid)
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.GetById(System.Guid)
  nameWithType.vb: IManager(Of CvkVault).GetById(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: IManager<CvkVault>.GetById
    fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: IManager(Of CvkVault).GetById
    fullName: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.SetOrUpdate(Tide.Core.CvkVault)
  commentId: M:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.SetOrUpdate(Tide.Core.CvkVault)
  parent: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  definition: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
  name: SetOrUpdate(CvkVault)
  nameWithType: IManager<CvkVault>.SetOrUpdate(CvkVault)
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.SetOrUpdate(Tide.Core.CvkVault)
  nameWithType.vb: IManager(Of CvkVault).SetOrUpdate(CvkVault)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).SetOrUpdate(Tide.Core.CvkVault)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: IManager<CvkVault>.SetOrUpdate
    fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.CvkVault
    name: CvkVault
    nameWithType: CvkVault
    fullName: Tide.Core.CvkVault
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: IManager(Of CvkVault).SetOrUpdate
    fullName: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.CvkVault
    name: CvkVault
    nameWithType: CvkVault
    fullName: Tide.Core.CvkVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Delete(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}.Delete(System.Guid)
  parent: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  definition: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
  name: Delete(Guid)
  nameWithType: IManager<CvkVault>.Delete(Guid)
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.Delete(System.Guid)
  nameWithType.vb: IManager(Of CvkVault).Delete(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: IManager<CvkVault>.Delete
    fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: IManager(Of CvkVault).Delete
    fullName: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1.GetAll
  commentId: M:Tide.Ork.Repo.IManager`1.GetAll
  name: GetAll()
  nameWithType: IManager<T>.GetAll()
  fullName: Tide.Ork.Repo.IManager<T>.GetAll()
  nameWithType.vb: IManager(Of T).GetAll()
  fullName.vb: Tide.Ork.Repo.IManager(Of T).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.GetAll
    name: GetAll
    nameWithType: IManager<T>.GetAll
    fullName: Tide.Ork.Repo.IManager<T>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.GetAll
    name: GetAll
    nameWithType: IManager(Of T).GetAll
    fullName: Tide.Ork.Repo.IManager(Of T).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  commentId: T:Tide.Ork.Repo.IManager{Tide.Core.CvkVault}
  parent: Tide.Ork.Repo
  definition: Tide.Ork.Repo.IManager`1
  name: IManager<CvkVault>
  nameWithType: IManager<CvkVault>
  fullName: Tide.Ork.Repo.IManager<Tide.Core.CvkVault>
  nameWithType.vb: IManager(Of CvkVault)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.CvkVault)
  name.vb: IManager(Of CvkVault)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.CvkVault
    name: CvkVault
    nameWithType: CvkVault
    fullName: Tide.Core.CvkVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.CvkVault
    name: CvkVault
    nameWithType: CvkVault
    fullName: Tide.Core.CvkVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager`1.Exist(System.Guid)
  isExternal: true
  name: Exist(Guid)
  nameWithType: IManager<T>.Exist(Guid)
  fullName: Tide.Ork.Repo.IManager<T>.Exist(System.Guid)
  nameWithType.vb: IManager(Of T).Exist(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of T).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: IManager<T>.Exist
    fullName: Tide.Ork.Repo.IManager<T>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: IManager(Of T).Exist
    fullName: Tide.Ork.Repo.IManager(Of T).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager`1.GetById(System.Guid)
  isExternal: true
  name: GetById(Guid)
  nameWithType: IManager<T>.GetById(Guid)
  fullName: Tide.Ork.Repo.IManager<T>.GetById(System.Guid)
  nameWithType.vb: IManager(Of T).GetById(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of T).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: IManager<T>.GetById
    fullName: Tide.Ork.Repo.IManager<T>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: IManager(Of T).GetById
    fullName: Tide.Ork.Repo.IManager(Of T).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
  commentId: M:Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
  name: SetOrUpdate(T)
  nameWithType: IManager<T>.SetOrUpdate(T)
  fullName: Tide.Ork.Repo.IManager<T>.SetOrUpdate(T)
  nameWithType.vb: IManager(Of T).SetOrUpdate(T)
  fullName.vb: Tide.Ork.Repo.IManager(Of T).SetOrUpdate(T)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: IManager<T>.SetOrUpdate
    fullName: Tide.Ork.Repo.IManager<T>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: IManager(Of T).SetOrUpdate
    fullName: Tide.Ork.Repo.IManager(Of T).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
  commentId: M:Tide.Ork.Repo.IManager`1.Delete(System.Guid)
  isExternal: true
  name: Delete(Guid)
  nameWithType: IManager<T>.Delete(Guid)
  fullName: Tide.Ork.Repo.IManager<T>.Delete(System.Guid)
  nameWithType.vb: IManager(Of T).Delete(Guid)
  fullName.vb: Tide.Ork.Repo.IManager(Of T).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: IManager<T>.Delete
    fullName: Tide.Ork.Repo.IManager<T>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: IManager(Of T).Delete
    fullName: Tide.Ork.Repo.IManager(Of T).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1
  commentId: T:Tide.Ork.Repo.IManager`1
  name: IManager<T>
  nameWithType: IManager<T>
  fullName: Tide.Ork.Repo.IManager<T>
  nameWithType.vb: IManager(Of T)
  fullName.vb: Tide.Ork.Repo.IManager(Of T)
  name.vb: IManager(Of T)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.ICvkManager.Confirm*
  commentId: Overload:Tide.Ork.Repo.ICvkManager.Confirm
  name: Confirm
  nameWithType: ICvkManager.Confirm
  fullName: Tide.Ork.Repo.ICvkManager.Confirm
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
