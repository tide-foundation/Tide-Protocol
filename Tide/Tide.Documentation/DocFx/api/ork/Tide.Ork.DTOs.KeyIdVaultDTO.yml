### YamlMime:ManagedReference
items:
- uid: Tide.Ork.DTOs.KeyIdVaultDTO
  commentId: T:Tide.Ork.DTOs.KeyIdVaultDTO
  id: KeyIdVaultDTO
  parent: Tide.Ork.DTOs
  children:
  - Tide.Ork.DTOs.KeyIdVaultDTO.#ctor
  - Tide.Ork.DTOs.KeyIdVaultDTO.#ctor(Tide.Core.KeyIdVault)
  - Tide.Ork.DTOs.KeyIdVaultDTO.Key
  - Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
  - Tide.Ork.DTOs.KeyIdVaultDTO.Map
  - Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Core.KeyIdVault)~Tide.Ork.DTOs.KeyIdVaultDTO
  - Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Ork.DTOs.KeyIdVaultDTO)~Tide.Core.KeyIdVault
  langs:
  - csharp
  - vb
  name: KeyIdVaultDTO
  nameWithType: KeyIdVaultDTO
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: KeyIdVaultDTO
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 6
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public class KeyIdVaultDTO
    content.vb: Public Class KeyIdVaultDTO
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
  commentId: P:Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
  id: KeyId
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: KeyId
  nameWithType: KeyIdVaultDTO.KeyId
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: KeyId
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 8
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public Guid KeyId { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property KeyId As Guid
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.KeyId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.Key
  commentId: P:Tide.Ork.DTOs.KeyIdVaultDTO.Key
  id: Key
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: KeyIdVaultDTO.Key
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Key
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Key
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 9
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.#ctor
  commentId: M:Tide.Ork.DTOs.KeyIdVaultDTO.#ctor
  id: '#ctor'
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: KeyIdVaultDTO()
  nameWithType: KeyIdVaultDTO.KeyIdVaultDTO()
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.KeyIdVaultDTO()
  type: Constructor
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: .ctor
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 11
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public KeyIdVaultDTO()
    content.vb: Public Sub New
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.#ctor(Tide.Core.KeyIdVault)
  commentId: M:Tide.Ork.DTOs.KeyIdVaultDTO.#ctor(Tide.Core.KeyIdVault)
  id: '#ctor(Tide.Core.KeyIdVault)'
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: KeyIdVaultDTO(KeyIdVault)
  nameWithType: KeyIdVaultDTO.KeyIdVaultDTO(KeyIdVault)
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.KeyIdVaultDTO(Tide.Core.KeyIdVault)
  type: Constructor
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: .ctor
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 13
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public KeyIdVaultDTO(KeyIdVault key)
    parameters:
    - id: key
      type: Tide.Core.KeyIdVault
    content.vb: Public Sub New(key As KeyIdVault)
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.Map
  commentId: M:Tide.Ork.DTOs.KeyIdVaultDTO.Map
  id: Map
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: Map()
  nameWithType: KeyIdVaultDTO.Map()
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Map()
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Map
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 19
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public KeyIdVault Map()
    return:
      type: Tide.Core.KeyIdVault
    content.vb: Public Function Map As KeyIdVault
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.Map*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Ork.DTOs.KeyIdVaultDTO)~Tide.Core.KeyIdVault
  commentId: M:Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Ork.DTOs.KeyIdVaultDTO)~Tide.Core.KeyIdVault
  id: op_Implicit(Tide.Ork.DTOs.KeyIdVaultDTO)~Tide.Core.KeyIdVault
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: Implicit(KeyIdVaultDTO to KeyIdVault)
  nameWithType: KeyIdVaultDTO.Implicit(KeyIdVaultDTO to KeyIdVault)
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Implicit(Tide.Ork.DTOs.KeyIdVaultDTO to Tide.Core.KeyIdVault)
  type: Operator
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: op_Implicit
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 28
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public static implicit operator KeyIdVault(KeyIdVaultDTO k)
    parameters:
    - id: k
      type: Tide.Ork.DTOs.KeyIdVaultDTO
    return:
      type: Tide.Core.KeyIdVault
    content.vb: Public Shared Widening Operator CType(k As KeyIdVaultDTO) As KeyIdVault
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit*
  nameWithType.vb: KeyIdVaultDTO.Widening(KeyIdVaultDTO to KeyIdVault)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Tide.Ork.DTOs.KeyIdVaultDTO.Widening(Tide.Ork.DTOs.KeyIdVaultDTO to Tide.Core.KeyIdVault)
  name.vb: Widening(KeyIdVaultDTO to KeyIdVault)
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Core.KeyIdVault)~Tide.Ork.DTOs.KeyIdVaultDTO
  commentId: M:Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit(Tide.Core.KeyIdVault)~Tide.Ork.DTOs.KeyIdVaultDTO
  id: op_Implicit(Tide.Core.KeyIdVault)~Tide.Ork.DTOs.KeyIdVaultDTO
  parent: Tide.Ork.DTOs.KeyIdVaultDTO
  langs:
  - csharp
  - vb
  name: Implicit(KeyIdVault to KeyIdVaultDTO)
  nameWithType: KeyIdVaultDTO.Implicit(KeyIdVault to KeyIdVaultDTO)
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Implicit(Tide.Core.KeyIdVault to Tide.Ork.DTOs.KeyIdVaultDTO)
  type: Operator
  source:
    remote:
      path: Tide/Tide.Ork/DTOs/KeyIdVaultDTO.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: op_Implicit
    path: ../../Tide.Ork/DTOs/KeyIdVaultDTO.cs
    startLine: 29
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.DTOs
  syntax:
    content: public static implicit operator KeyIdVaultDTO(KeyIdVault k)
    parameters:
    - id: k
      type: Tide.Core.KeyIdVault
    return:
      type: Tide.Ork.DTOs.KeyIdVaultDTO
    content.vb: Public Shared Widening Operator CType(k As KeyIdVault) As KeyIdVaultDTO
  overload: Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit*
  nameWithType.vb: KeyIdVaultDTO.Widening(KeyIdVault to KeyIdVaultDTO)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Tide.Ork.DTOs.KeyIdVaultDTO.Widening(Tide.Core.KeyIdVault to Tide.Ork.DTOs.KeyIdVaultDTO)
  name.vb: Widening(KeyIdVault to KeyIdVaultDTO)
references:
- uid: Tide.Ork.DTOs
  commentId: N:Tide.Ork.DTOs
  name: Tide.Ork.DTOs
  nameWithType: Tide.Ork.DTOs
  fullName: Tide.Ork.DTOs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.KeyId*
  commentId: Overload:Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
  name: KeyId
  nameWithType: KeyIdVaultDTO.KeyId
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.KeyId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.Key*
  commentId: Overload:Tide.Ork.DTOs.KeyIdVaultDTO.Key
  name: Key
  nameWithType: KeyIdVaultDTO.Key
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.#ctor*
  commentId: Overload:Tide.Ork.DTOs.KeyIdVaultDTO.#ctor
  name: KeyIdVaultDTO
  nameWithType: KeyIdVaultDTO.KeyIdVaultDTO
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.KeyIdVaultDTO
- uid: Tide.Core.KeyIdVault
  commentId: T:Tide.Core.KeyIdVault
  parent: Tide.Core
  name: KeyIdVault
  nameWithType: KeyIdVault
  fullName: Tide.Core.KeyIdVault
- uid: Tide.Core
  commentId: N:Tide.Core
  name: Tide.Core
  nameWithType: Tide.Core
  fullName: Tide.Core
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.Map*
  commentId: Overload:Tide.Ork.DTOs.KeyIdVaultDTO.Map
  name: Map
  nameWithType: KeyIdVaultDTO.Map
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Map
- uid: Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit*
  commentId: Overload:Tide.Ork.DTOs.KeyIdVaultDTO.op_Implicit
  name: Implicit
  nameWithType: KeyIdVaultDTO.Implicit
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO.Implicit
  nameWithType.vb: KeyIdVaultDTO.Widening
  fullName.vb: Tide.Ork.DTOs.KeyIdVaultDTO.Widening
  name.vb: Widening
- uid: Tide.Ork.DTOs.KeyIdVaultDTO
  commentId: T:Tide.Ork.DTOs.KeyIdVaultDTO
  parent: Tide.Ork.DTOs
  name: KeyIdVaultDTO
  nameWithType: KeyIdVaultDTO
  fullName: Tide.Ork.DTOs.KeyIdVaultDTO
