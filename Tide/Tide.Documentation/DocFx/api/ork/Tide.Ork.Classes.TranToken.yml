### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Classes.TranToken
  commentId: T:Tide.Ork.Classes.TranToken
  id: TranToken
  parent: Tide.Ork.Classes
  children:
  - Tide.Ork.Classes.TranToken.#ctor
  - Tide.Ork.Classes.TranToken.Check(Tide.Encryption.AesMAC.AesKey)
  - Tide.Ork.Classes.TranToken.Generate(Tide.Encryption.AesMAC.AesKey)
  - Tide.Ork.Classes.TranToken.GenKey(Tide.Encryption.AesMAC.AesKey)
  - Tide.Ork.Classes.TranToken.GetByteCount
  - Tide.Ork.Classes.TranToken.Id
  - Tide.Ork.Classes.TranToken.Parse(System.Collections.Generic.IReadOnlyList{System.Byte})
  - Tide.Ork.Classes.TranToken.Sign
  - Tide.Ork.Classes.TranToken.Ticks
  - Tide.Ork.Classes.TranToken.ToByteArray
  - Tide.Ork.Classes.TranToken.ToString
  langs:
  - csharp
  - vb
  name: TranToken
  nameWithType: TranToken
  fullName: Tide.Ork.Classes.TranToken
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: TranToken
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 7
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public class TranToken
    content.vb: Public Class TranToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tide.Ork.Classes.TranToken.#ctor
  commentId: M:Tide.Ork.Classes.TranToken.#ctor
  id: '#ctor'
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: TranToken()
  nameWithType: TranToken.TranToken()
  fullName: Tide.Ork.Classes.TranToken.TranToken()
  type: Constructor
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: .ctor
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 9
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public TranToken()
    content.vb: Public Sub New
  overload: Tide.Ork.Classes.TranToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.Id
  commentId: P:Tide.Ork.Classes.TranToken.Id
  id: Id
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TranToken.Id
  fullName: Tide.Ork.Classes.TranToken.Id
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Id
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 11
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: Tide.Ork.Classes.TranToken.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.Ticks
  commentId: P:Tide.Ork.Classes.TranToken.Ticks
  id: Ticks
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Ticks
  nameWithType: TranToken.Ticks
  fullName: Tide.Ork.Classes.TranToken.Ticks
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Ticks
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 12
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public long Ticks { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Ticks As Long
  overload: Tide.Ork.Classes.TranToken.Ticks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.Sign
  commentId: P:Tide.Ork.Classes.TranToken.Sign
  id: Sign
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Sign
  nameWithType: TranToken.Sign
  fullName: Tide.Ork.Classes.TranToken.Sign
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Sign
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 13
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public byte[] Sign { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Sign As Byte()
  overload: Tide.Ork.Classes.TranToken.Sign*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.Check(Tide.Encryption.AesMAC.AesKey)
  commentId: M:Tide.Ork.Classes.TranToken.Check(Tide.Encryption.AesMAC.AesKey)
  id: Check(Tide.Encryption.AesMAC.AesKey)
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Check(AesKey)
  nameWithType: TranToken.Check(AesKey)
  fullName: Tide.Ork.Classes.TranToken.Check(Tide.Encryption.AesMAC.AesKey)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Check
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 15
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public bool Check(AesKey key)
    parameters:
    - id: key
      type: Tide.Encryption.AesMAC.AesKey
    return:
      type: System.Boolean
    content.vb: Public Function Check(key As AesKey) As Boolean
  overload: Tide.Ork.Classes.TranToken.Check*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.GenKey(Tide.Encryption.AesMAC.AesKey)
  commentId: M:Tide.Ork.Classes.TranToken.GenKey(Tide.Encryption.AesMAC.AesKey)
  id: GenKey(Tide.Encryption.AesMAC.AesKey)
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: GenKey(AesKey)
  nameWithType: TranToken.GenKey(AesKey)
  fullName: Tide.Ork.Classes.TranToken.GenKey(Tide.Encryption.AesMAC.AesKey)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GenKey
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 19
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public AesSherableKey GenKey(AesKey key)
    parameters:
    - id: key
      type: Tide.Encryption.AesMAC.AesKey
    return:
      type: Tide.Encryption.AesMAC.AesSherableKey
    content.vb: Public Function GenKey(key As AesKey) As AesSherableKey
  overload: Tide.Ork.Classes.TranToken.GenKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.GetByteCount
  commentId: M:Tide.Ork.Classes.TranToken.GetByteCount
  id: GetByteCount
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: GetByteCount()
  nameWithType: TranToken.GetByteCount()
  fullName: Tide.Ork.Classes.TranToken.GetByteCount()
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetByteCount
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 21
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public int GetByteCount()
    return:
      type: System.Int32
    content.vb: Public Function GetByteCount As Integer
  overload: Tide.Ork.Classes.TranToken.GetByteCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.ToString
  commentId: M:Tide.Ork.Classes.TranToken.ToString
  id: ToString
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TranToken.ToString()
  fullName: Tide.Ork.Classes.TranToken.ToString()
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ToString
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 23
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Tide.Ork.Classes.TranToken.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Tide.Ork.Classes.TranToken.ToByteArray
  commentId: M:Tide.Ork.Classes.TranToken.ToByteArray
  id: ToByteArray
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: ToByteArray()
  nameWithType: TranToken.ToByteArray()
  fullName: Tide.Ork.Classes.TranToken.ToByteArray()
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ToByteArray
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 25
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public byte[] ToByteArray()
    return:
      type: System.Byte[]
    content.vb: Public Function ToByteArray As Byte()
  overload: Tide.Ork.Classes.TranToken.ToByteArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Classes.TranToken.Generate(Tide.Encryption.AesMAC.AesKey)
  commentId: M:Tide.Ork.Classes.TranToken.Generate(Tide.Encryption.AesMAC.AesKey)
  id: Generate(Tide.Encryption.AesMAC.AesKey)
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Generate(AesKey)
  nameWithType: TranToken.Generate(AesKey)
  fullName: Tide.Ork.Classes.TranToken.Generate(Tide.Encryption.AesMAC.AesKey)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Generate
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 31
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public static TranToken Generate(AesKey key)
    parameters:
    - id: key
      type: Tide.Encryption.AesMAC.AesKey
    return:
      type: Tide.Ork.Classes.TranToken
    content.vb: Public Shared Function Generate(key As AesKey) As TranToken
  overload: Tide.Ork.Classes.TranToken.Generate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Tide.Ork.Classes.TranToken.Parse(System.Collections.Generic.IReadOnlyList{System.Byte})
  commentId: M:Tide.Ork.Classes.TranToken.Parse(System.Collections.Generic.IReadOnlyList{System.Byte})
  id: Parse(System.Collections.Generic.IReadOnlyList{System.Byte})
  parent: Tide.Ork.Classes.TranToken
  langs:
  - csharp
  - vb
  name: Parse(IReadOnlyList<Byte>)
  nameWithType: TranToken.Parse(IReadOnlyList<Byte>)
  fullName: Tide.Ork.Classes.TranToken.Parse(System.Collections.Generic.IReadOnlyList<System.Byte>)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/TranToken.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: Parse
    path: ../../Tide.Ork/Classes/TranToken.cs
    startLine: 40
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public static TranToken Parse(IReadOnlyList<byte> bytes)
    parameters:
    - id: bytes
      type: System.Collections.Generic.IReadOnlyList{System.Byte}
    return:
      type: Tide.Ork.Classes.TranToken
    content.vb: Public Shared Function Parse(bytes As IReadOnlyList(Of Byte)) As TranToken
  overload: Tide.Ork.Classes.TranToken.Parse*
  nameWithType.vb: TranToken.Parse(IReadOnlyList(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Tide.Ork.Classes.TranToken.Parse(System.Collections.Generic.IReadOnlyList(Of System.Byte))
  name.vb: Parse(IReadOnlyList(Of Byte))
references:
- uid: Tide.Ork.Classes
  commentId: N:Tide.Ork.Classes
  name: Tide.Ork.Classes
  nameWithType: Tide.Ork.Classes
  fullName: Tide.Ork.Classes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.Classes.TranToken.#ctor*
  commentId: Overload:Tide.Ork.Classes.TranToken.#ctor
  name: TranToken
  nameWithType: TranToken.TranToken
  fullName: Tide.Ork.Classes.TranToken.TranToken
- uid: Tide.Ork.Classes.TranToken.Id*
  commentId: Overload:Tide.Ork.Classes.TranToken.Id
  name: Id
  nameWithType: TranToken.Id
  fullName: Tide.Ork.Classes.TranToken.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Tide.Ork.Classes.TranToken.Ticks*
  commentId: Overload:Tide.Ork.Classes.TranToken.Ticks
  name: Ticks
  nameWithType: TranToken.Ticks
  fullName: Tide.Ork.Classes.TranToken.Ticks
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Tide.Ork.Classes.TranToken.Sign*
  commentId: Overload:Tide.Ork.Classes.TranToken.Sign
  name: Sign
  nameWithType: TranToken.Sign
  fullName: Tide.Ork.Classes.TranToken.Sign
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Tide.Ork.Classes.TranToken.Check*
  commentId: Overload:Tide.Ork.Classes.TranToken.Check
  name: Check
  nameWithType: TranToken.Check
  fullName: Tide.Ork.Classes.TranToken.Check
- uid: Tide.Encryption.AesMAC.AesKey
  commentId: T:Tide.Encryption.AesMAC.AesKey
  parent: Tide.Encryption.AesMAC
  isExternal: true
  name: AesKey
  nameWithType: AesKey
  fullName: Tide.Encryption.AesMAC.AesKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Tide.Encryption.AesMAC
  commentId: N:Tide.Encryption.AesMAC
  isExternal: true
  name: Tide.Encryption.AesMAC
  nameWithType: Tide.Encryption.AesMAC
  fullName: Tide.Encryption.AesMAC
- uid: Tide.Ork.Classes.TranToken.GenKey*
  commentId: Overload:Tide.Ork.Classes.TranToken.GenKey
  name: GenKey
  nameWithType: TranToken.GenKey
  fullName: Tide.Ork.Classes.TranToken.GenKey
- uid: Tide.Encryption.AesMAC.AesSherableKey
  commentId: T:Tide.Encryption.AesMAC.AesSherableKey
  parent: Tide.Encryption.AesMAC
  isExternal: true
  name: AesSherableKey
  nameWithType: AesSherableKey
  fullName: Tide.Encryption.AesMAC.AesSherableKey
- uid: Tide.Ork.Classes.TranToken.GetByteCount*
  commentId: Overload:Tide.Ork.Classes.TranToken.GetByteCount
  name: GetByteCount
  nameWithType: TranToken.GetByteCount
  fullName: Tide.Ork.Classes.TranToken.GetByteCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.TranToken.ToString*
  commentId: Overload:Tide.Ork.Classes.TranToken.ToString
  name: ToString
  nameWithType: TranToken.ToString
  fullName: Tide.Ork.Classes.TranToken.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tide.Ork.Classes.TranToken.ToByteArray*
  commentId: Overload:Tide.Ork.Classes.TranToken.ToByteArray
  name: ToByteArray
  nameWithType: TranToken.ToByteArray
  fullName: Tide.Ork.Classes.TranToken.ToByteArray
- uid: Tide.Ork.Classes.TranToken.Generate*
  commentId: Overload:Tide.Ork.Classes.TranToken.Generate
  name: Generate
  nameWithType: TranToken.Generate
  fullName: Tide.Ork.Classes.TranToken.Generate
- uid: Tide.Ork.Classes.TranToken
  commentId: T:Tide.Ork.Classes.TranToken
  parent: Tide.Ork.Classes
  name: TranToken
  nameWithType: TranToken
  fullName: Tide.Ork.Classes.TranToken
- uid: Tide.Ork.Classes.TranToken.Parse*
  commentId: Overload:Tide.Ork.Classes.TranToken.Parse
  name: Parse
  nameWithType: TranToken.Parse
  fullName: Tide.Ork.Classes.TranToken.Parse
- uid: System.Collections.Generic.IReadOnlyList{System.Byte}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Byte>
  nameWithType: IReadOnlyList<Byte>
  fullName: System.Collections.Generic.IReadOnlyList<System.Byte>
  nameWithType.vb: IReadOnlyList(Of Byte)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Byte)
  name.vb: IReadOnlyList(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
