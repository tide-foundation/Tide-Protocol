### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Repo.CacheRuleManager
  commentId: T:Tide.Ork.Repo.CacheRuleManager
  id: CacheRuleManager
  parent: Tide.Ork.Repo
  children:
  - Tide.Ork.Repo.CacheRuleManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Tide.Ork.Repo.IRuleManager)
  - Tide.Ork.Repo.CacheRuleManager.ConfirmAll(System.Guid)
  - Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid)
  - Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  - Tide.Ork.Repo.CacheRuleManager.MaxID
  langs:
  - csharp
  - vb
  name: CacheRuleManager
  nameWithType: CacheRuleManager
  fullName: Tide.Ork.Repo.CacheRuleManager
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: CacheRuleManager
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 9
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: 'public class CacheRuleManager : CacheManager<RuleVault>, IRuleManager, IManager<RuleVault>'
    content.vb: >-
      Public Class CacheRuleManager
          Inherits CacheManager(Of RuleVault)
          Implements IRuleManager, IManager(Of RuleVault)
  inheritance:
  - System.Object
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  implements:
  - Tide.Ork.Repo.IRuleManager
  - Tide.Ork.Repo.IManager{Tide.Core.RuleVault}
  inheritedMembers:
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.life
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Cache
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.SetOrUpdate(Tide.Core.RuleVault)
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Confirm(System.Guid)
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Delete(System.Guid)
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Exist(System.Guid)
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetAll
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetById(System.Guid)
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetEnumerable
  - Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetGuids
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tide.Ork.Repo.CacheRuleManager.MaxID
  commentId: P:Tide.Ork.Repo.CacheRuleManager.MaxID
  id: MaxID
  parent: Tide.Ork.Repo.CacheRuleManager
  langs:
  - csharp
  - vb
  name: MaxID
  nameWithType: CacheRuleManager.MaxID
  fullName: Tide.Ork.Repo.CacheRuleManager.MaxID
  type: Property
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: MaxID
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 13
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: public static Guid MaxID { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Shared ReadOnly Property MaxID As Guid
  overload: Tide.Ork.Repo.CacheRuleManager.MaxID*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Tide.Ork.Repo.CacheRuleManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Tide.Ork.Repo.IRuleManager)
  commentId: M:Tide.Ork.Repo.CacheRuleManager.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Tide.Ork.Repo.IRuleManager)
  id: '#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Tide.Ork.Repo.IRuleManager)'
  parent: Tide.Ork.Repo.CacheRuleManager
  langs:
  - csharp
  - vb
  name: CacheRuleManager(IMemoryCache, IRuleManager)
  nameWithType: CacheRuleManager.CacheRuleManager(IMemoryCache, IRuleManager)
  fullName: Tide.Ork.Repo.CacheRuleManager.CacheRuleManager(Microsoft.Extensions.Caching.Memory.IMemoryCache, Tide.Ork.Repo.IRuleManager)
  type: Constructor
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: .ctor
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 15
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: public CacheRuleManager(IMemoryCache cache, IRuleManager manager)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    - id: manager
      type: Tide.Ork.Repo.IRuleManager
    content.vb: Public Sub New(cache As IMemoryCache, manager As IRuleManager)
  overload: Tide.Ork.Repo.CacheRuleManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  commentId: M:Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  id: GetSetBy(System.Guid,System.UInt64,System.Guid)
  parent: Tide.Ork.Repo.CacheRuleManager
  langs:
  - csharp
  - vb
  name: GetSetBy(Guid, UInt64, Guid)
  nameWithType: CacheRuleManager.GetSetBy(Guid, UInt64, Guid)
  fullName: Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid, System.UInt64, System.Guid)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetSetBy
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 20
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: public Task<List<RuleVault>> GetSetBy(Guid ownerId, ulong tag, Guid keyId)
    parameters:
    - id: ownerId
      type: System.Guid
    - id: tag
      type: System.UInt64
    - id: keyId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Tide.Core.RuleVault}}
    content.vb: Public Function GetSetBy(ownerId As Guid, tag As ULong, keyId As Guid) As Task(Of List(Of RuleVault))
  overload: Tide.Ork.Repo.CacheRuleManager.GetSetBy*
  implements:
  - Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid)
  id: GetSetBy(System.Guid)
  parent: Tide.Ork.Repo.CacheRuleManager
  langs:
  - csharp
  - vb
  name: GetSetBy(Guid)
  nameWithType: CacheRuleManager.GetSetBy(Guid)
  fullName: Tide.Ork.Repo.CacheRuleManager.GetSetBy(System.Guid)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetSetBy
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 30
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: public Task<List<RuleVault>> GetSetBy(Guid ownerId)
    parameters:
    - id: ownerId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Tide.Core.RuleVault}}
    content.vb: Public Function GetSetBy(ownerId As Guid) As Task(Of List(Of RuleVault))
  overload: Tide.Ork.Repo.CacheRuleManager.GetSetBy*
  implements:
  - Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tide.Ork.Repo.CacheRuleManager.ConfirmAll(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheRuleManager.ConfirmAll(System.Guid)
  id: ConfirmAll(System.Guid)
  parent: Tide.Ork.Repo.CacheRuleManager
  langs:
  - csharp
  - vb
  name: ConfirmAll(Guid)
  nameWithType: CacheRuleManager.ConfirmAll(Guid)
  fullName: Tide.Ork.Repo.CacheRuleManager.ConfirmAll(System.Guid)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Repo/CacheRuleManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: ConfirmAll
    path: ../../Tide.Ork/Repo/CacheRuleManager.cs
    startLine: 38
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Repo
  syntax:
    content: public virtual Task ConfirmAll(Guid ownerId)
    parameters:
    - id: ownerId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function ConfirmAll(ownerId As Guid) As Task
  overload: Tide.Ork.Repo.CacheRuleManager.ConfirmAll*
  implements:
  - Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Tide.Ork.Repo
  commentId: N:Tide.Ork.Repo
  name: Tide.Ork.Repo
  nameWithType: Tide.Ork.Repo
  fullName: Tide.Ork.Repo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  commentId: T:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  parent: Tide.Ork.Repo
  definition: Tide.Ork.Repo.CacheManager`1
  name: CacheManager<RuleVault>
  nameWithType: CacheManager<RuleVault>
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>
  nameWithType.vb: CacheManager(Of RuleVault)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault)
  name.vb: CacheManager(Of RuleVault)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1
    name: CacheManager
    nameWithType: CacheManager
    fullName: Tide.Ork.Repo.CacheManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1
    name: CacheManager
    nameWithType: CacheManager
    fullName: Tide.Ork.Repo.CacheManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IRuleManager
  commentId: T:Tide.Ork.Repo.IRuleManager
  parent: Tide.Ork.Repo
  name: IRuleManager
  nameWithType: IRuleManager
  fullName: Tide.Ork.Repo.IRuleManager
- uid: Tide.Ork.Repo.IManager{Tide.Core.RuleVault}
  commentId: T:Tide.Ork.Repo.IManager{Tide.Core.RuleVault}
  parent: Tide.Ork.Repo
  definition: Tide.Ork.Repo.IManager`1
  name: IManager<RuleVault>
  nameWithType: IManager<RuleVault>
  fullName: Tide.Ork.Repo.IManager<Tide.Core.RuleVault>
  nameWithType.vb: IManager(Of RuleVault)
  fullName.vb: Tide.Ork.Repo.IManager(Of Tide.Core.RuleVault)
  name.vb: IManager(Of RuleVault)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.life
  commentId: F:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.life
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.life
  name: life
  nameWithType: CacheManager<RuleVault>.life
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.life
  nameWithType.vb: CacheManager(Of RuleVault).life
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).life
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Cache
  commentId: F:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Cache
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.Cache
  name: Cache
  nameWithType: CacheManager<RuleVault>.Cache
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Cache
  nameWithType.vb: CacheManager(Of RuleVault).Cache
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Cache
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.SetOrUpdate(Tide.Core.RuleVault)
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.SetOrUpdate(Tide.Core.RuleVault)
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
  name: SetOrUpdate(RuleVault)
  nameWithType: CacheManager<RuleVault>.SetOrUpdate(RuleVault)
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.SetOrUpdate(Tide.Core.RuleVault)
  nameWithType.vb: CacheManager(Of RuleVault).SetOrUpdate(RuleVault)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).SetOrUpdate(Tide.Core.RuleVault)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: CacheManager<RuleVault>.SetOrUpdate
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: CacheManager(Of RuleVault).SetOrUpdate
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Confirm(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Confirm(System.Guid)
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
  name: Confirm(Guid)
  nameWithType: CacheManager<RuleVault>.Confirm(Guid)
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Confirm(System.Guid)
  nameWithType.vb: CacheManager(Of RuleVault).Confirm(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Confirm(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
    name: Confirm
    nameWithType: CacheManager<RuleVault>.Confirm
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Confirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
    name: Confirm
    nameWithType: CacheManager(Of RuleVault).Confirm
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Confirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Delete(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Delete(System.Guid)
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
  name: Delete(Guid)
  nameWithType: CacheManager<RuleVault>.Delete(Guid)
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Delete(System.Guid)
  nameWithType.vb: CacheManager(Of RuleVault).Delete(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: CacheManager<RuleVault>.Delete
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: CacheManager(Of RuleVault).Delete
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Exist(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.Exist(System.Guid)
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
  name: Exist(Guid)
  nameWithType: CacheManager<RuleVault>.Exist(Guid)
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Exist(System.Guid)
  nameWithType.vb: CacheManager(Of RuleVault).Exist(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: CacheManager<RuleVault>.Exist
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: CacheManager(Of RuleVault).Exist
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetAll
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetAll
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.GetAll
  name: GetAll()
  nameWithType: CacheManager<RuleVault>.GetAll()
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetAll()
  nameWithType.vb: CacheManager(Of RuleVault).GetAll()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetAll
    name: GetAll
    nameWithType: CacheManager<RuleVault>.GetAll
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetAll
    name: GetAll
    nameWithType: CacheManager(Of RuleVault).GetAll
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetById(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetById(System.Guid)
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
  name: GetById(Guid)
  nameWithType: CacheManager<RuleVault>.GetById(Guid)
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetById(System.Guid)
  nameWithType.vb: CacheManager(Of RuleVault).GetById(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: CacheManager<RuleVault>.GetById
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: CacheManager(Of RuleVault).GetById
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetEnumerable
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetEnumerable
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.GetEnumerable
  name: GetEnumerable()
  nameWithType: CacheManager<RuleVault>.GetEnumerable()
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetEnumerable()
  nameWithType.vb: CacheManager(Of RuleVault).GetEnumerable()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetEnumerable()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetEnumerable
    name: GetEnumerable
    nameWithType: CacheManager<RuleVault>.GetEnumerable
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetEnumerable
    name: GetEnumerable
    nameWithType: CacheManager(Of RuleVault).GetEnumerable
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetGuids
  commentId: M:Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}.GetGuids
  parent: Tide.Ork.Repo.CacheManager{Tide.Core.RuleVault}
  definition: Tide.Ork.Repo.CacheManager`1.GetGuids
  name: GetGuids()
  nameWithType: CacheManager<RuleVault>.GetGuids()
  fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetGuids()
  nameWithType.vb: CacheManager(Of RuleVault).GetGuids()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetGuids()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetGuids
    name: GetGuids
    nameWithType: CacheManager<RuleVault>.GetGuids
    fullName: Tide.Ork.Repo.CacheManager<Tide.Core.RuleVault>.GetGuids
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetGuids
    name: GetGuids
    nameWithType: CacheManager(Of RuleVault).GetGuids
    fullName: Tide.Ork.Repo.CacheManager(Of Tide.Core.RuleVault).GetGuids
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.Repo.CacheManager`1
  commentId: T:Tide.Ork.Repo.CacheManager`1
  name: CacheManager<T>
  nameWithType: CacheManager<T>
  fullName: Tide.Ork.Repo.CacheManager<T>
  nameWithType.vb: CacheManager(Of T)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T)
  name.vb: CacheManager(Of T)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1
    name: CacheManager
    nameWithType: CacheManager
    fullName: Tide.Ork.Repo.CacheManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1
    name: CacheManager
    nameWithType: CacheManager
    fullName: Tide.Ork.Repo.CacheManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.IManager`1
  commentId: T:Tide.Ork.Repo.IManager`1
  name: IManager<T>
  nameWithType: IManager<T>
  fullName: Tide.Ork.Repo.IManager<T>
  nameWithType.vb: IManager(Of T)
  fullName.vb: Tide.Ork.Repo.IManager(Of T)
  name.vb: IManager(Of T)
  spec.csharp:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Repo.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Repo.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.life
  commentId: F:Tide.Ork.Repo.CacheManager`1.life
  name: life
  nameWithType: CacheManager<T>.life
  fullName: Tide.Ork.Repo.CacheManager<T>.life
  nameWithType.vb: CacheManager(Of T).life
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).life
- uid: Tide.Ork.Repo.CacheManager`1.Cache
  commentId: F:Tide.Ork.Repo.CacheManager`1.Cache
  name: Cache
  nameWithType: CacheManager<T>.Cache
  fullName: Tide.Ork.Repo.CacheManager<T>.Cache
  nameWithType.vb: CacheManager(Of T).Cache
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).Cache
- uid: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
  commentId: M:Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
  name: SetOrUpdate(T)
  nameWithType: CacheManager<T>.SetOrUpdate(T)
  fullName: Tide.Ork.Repo.CacheManager<T>.SetOrUpdate(T)
  nameWithType.vb: CacheManager(Of T).SetOrUpdate(T)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).SetOrUpdate(T)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: CacheManager<T>.SetOrUpdate
    fullName: Tide.Ork.Repo.CacheManager<T>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: CacheManager(Of T).SetOrUpdate
    fullName: Tide.Ork.Repo.CacheManager(Of T).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
  isExternal: true
  name: Confirm(Guid)
  nameWithType: CacheManager<T>.Confirm(Guid)
  fullName: Tide.Ork.Repo.CacheManager<T>.Confirm(System.Guid)
  nameWithType.vb: CacheManager(Of T).Confirm(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).Confirm(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
    name: Confirm
    nameWithType: CacheManager<T>.Confirm
    fullName: Tide.Ork.Repo.CacheManager<T>.Confirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Confirm(System.Guid)
    name: Confirm
    nameWithType: CacheManager(Of T).Confirm
    fullName: Tide.Ork.Repo.CacheManager(Of T).Confirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
  isExternal: true
  name: Delete(Guid)
  nameWithType: CacheManager<T>.Delete(Guid)
  fullName: Tide.Ork.Repo.CacheManager<T>.Delete(System.Guid)
  nameWithType.vb: CacheManager(Of T).Delete(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: CacheManager<T>.Delete
    fullName: Tide.Ork.Repo.CacheManager<T>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Delete(System.Guid)
    name: Delete
    nameWithType: CacheManager(Of T).Delete
    fullName: Tide.Ork.Repo.CacheManager(Of T).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
  isExternal: true
  name: Exist(Guid)
  nameWithType: CacheManager<T>.Exist(Guid)
  fullName: Tide.Ork.Repo.CacheManager<T>.Exist(System.Guid)
  nameWithType.vb: CacheManager(Of T).Exist(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: CacheManager<T>.Exist
    fullName: Tide.Ork.Repo.CacheManager<T>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.Exist(System.Guid)
    name: Exist
    nameWithType: CacheManager(Of T).Exist
    fullName: Tide.Ork.Repo.CacheManager(Of T).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.GetAll
  commentId: M:Tide.Ork.Repo.CacheManager`1.GetAll
  name: GetAll()
  nameWithType: CacheManager<T>.GetAll()
  fullName: Tide.Ork.Repo.CacheManager<T>.GetAll()
  nameWithType.vb: CacheManager(Of T).GetAll()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetAll
    name: GetAll
    nameWithType: CacheManager<T>.GetAll
    fullName: Tide.Ork.Repo.CacheManager<T>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetAll
    name: GetAll
    nameWithType: CacheManager(Of T).GetAll
    fullName: Tide.Ork.Repo.CacheManager(Of T).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
  commentId: M:Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
  isExternal: true
  name: GetById(Guid)
  nameWithType: CacheManager<T>.GetById(Guid)
  fullName: Tide.Ork.Repo.CacheManager<T>.GetById(System.Guid)
  nameWithType.vb: CacheManager(Of T).GetById(Guid)
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: CacheManager<T>.GetById
    fullName: Tide.Ork.Repo.CacheManager<T>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetById(System.Guid)
    name: GetById
    nameWithType: CacheManager(Of T).GetById
    fullName: Tide.Ork.Repo.CacheManager(Of T).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.GetEnumerable
  commentId: M:Tide.Ork.Repo.CacheManager`1.GetEnumerable
  name: GetEnumerable()
  nameWithType: CacheManager<T>.GetEnumerable()
  fullName: Tide.Ork.Repo.CacheManager<T>.GetEnumerable()
  nameWithType.vb: CacheManager(Of T).GetEnumerable()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).GetEnumerable()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetEnumerable
    name: GetEnumerable
    nameWithType: CacheManager<T>.GetEnumerable
    fullName: Tide.Ork.Repo.CacheManager<T>.GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetEnumerable
    name: GetEnumerable
    nameWithType: CacheManager(Of T).GetEnumerable
    fullName: Tide.Ork.Repo.CacheManager(Of T).GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheManager`1.GetGuids
  commentId: M:Tide.Ork.Repo.CacheManager`1.GetGuids
  name: GetGuids()
  nameWithType: CacheManager<T>.GetGuids()
  fullName: Tide.Ork.Repo.CacheManager<T>.GetGuids()
  nameWithType.vb: CacheManager(Of T).GetGuids()
  fullName.vb: Tide.Ork.Repo.CacheManager(Of T).GetGuids()
  spec.csharp:
  - uid: Tide.Ork.Repo.CacheManager`1.GetGuids
    name: GetGuids
    nameWithType: CacheManager<T>.GetGuids
    fullName: Tide.Ork.Repo.CacheManager<T>.GetGuids
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.CacheManager`1.GetGuids
    name: GetGuids
    nameWithType: CacheManager(Of T).GetGuids
    fullName: Tide.Ork.Repo.CacheManager(Of T).GetGuids
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheRuleManager.MaxID*
  commentId: Overload:Tide.Ork.Repo.CacheRuleManager.MaxID
  name: MaxID
  nameWithType: CacheRuleManager.MaxID
  fullName: Tide.Ork.Repo.CacheRuleManager.MaxID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Tide.Ork.Repo.CacheRuleManager.#ctor*
  commentId: Overload:Tide.Ork.Repo.CacheRuleManager.#ctor
  name: CacheRuleManager
  nameWithType: CacheRuleManager.CacheRuleManager
  fullName: Tide.Ork.Repo.CacheRuleManager.CacheRuleManager
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Tide.Ork.Repo.CacheRuleManager.GetSetBy*
  commentId: Overload:Tide.Ork.Repo.CacheRuleManager.GetSetBy
  name: GetSetBy
  nameWithType: CacheRuleManager.GetSetBy
  fullName: Tide.Ork.Repo.CacheRuleManager.GetSetBy
- uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  commentId: M:Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
  parent: Tide.Ork.Repo.IRuleManager
  isExternal: true
  name: GetSetBy(Guid, UInt64, Guid)
  nameWithType: IRuleManager.GetSetBy(Guid, UInt64, Guid)
  fullName: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid, System.UInt64, System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
    name: GetSetBy
    nameWithType: IRuleManager.GetSetBy
    fullName: Tide.Ork.Repo.IRuleManager.GetSetBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid,System.UInt64,System.Guid)
    name: GetSetBy
    nameWithType: IRuleManager.GetSetBy
    fullName: Tide.Ork.Repo.IRuleManager.GetSetBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Tide.Core.RuleVault}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Tide.Core.RuleVault}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<RuleVault>>
  nameWithType: Task<List<RuleVault>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Tide.Core.RuleVault>>
  nameWithType.vb: Task(Of List(Of RuleVault))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Tide.Core.RuleVault))
  name.vb: Task(Of List(Of RuleVault))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.RuleVault
    name: RuleVault
    nameWithType: RuleVault
    fullName: Tide.Core.RuleVault
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
  commentId: M:Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
  parent: Tide.Ork.Repo.IRuleManager
  isExternal: true
  name: GetSetBy(Guid)
  nameWithType: IRuleManager.GetSetBy(Guid)
  fullName: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
    name: GetSetBy
    nameWithType: IRuleManager.GetSetBy
    fullName: Tide.Ork.Repo.IRuleManager.GetSetBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IRuleManager.GetSetBy(System.Guid)
    name: GetSetBy
    nameWithType: IRuleManager.GetSetBy
    fullName: Tide.Ork.Repo.IRuleManager.GetSetBy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Repo.CacheRuleManager.ConfirmAll*
  commentId: Overload:Tide.Ork.Repo.CacheRuleManager.ConfirmAll
  name: ConfirmAll
  nameWithType: CacheRuleManager.ConfirmAll
  fullName: Tide.Ork.Repo.CacheRuleManager.ConfirmAll
- uid: Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
  commentId: M:Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
  parent: Tide.Ork.Repo.IRuleManager
  isExternal: true
  name: ConfirmAll(Guid)
  nameWithType: IRuleManager.ConfirmAll(Guid)
  fullName: Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
    name: ConfirmAll
    nameWithType: IRuleManager.ConfirmAll
    fullName: Tide.Ork.Repo.IRuleManager.ConfirmAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Repo.IRuleManager.ConfirmAll(System.Guid)
    name: ConfirmAll
    nameWithType: IRuleManager.ConfirmAll
    fullName: Tide.Ork.Repo.IRuleManager.ConfirmAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
