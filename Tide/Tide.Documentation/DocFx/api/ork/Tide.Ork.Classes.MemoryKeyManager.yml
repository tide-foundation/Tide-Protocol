### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Classes.MemoryKeyManager
  commentId: T:Tide.Ork.Classes.MemoryKeyManager
  id: MemoryKeyManager
  parent: Tide.Ork.Classes
  children:
  - Tide.Ork.Classes.MemoryKeyManager.GetAuthShare(System.Guid)
  langs:
  - csharp
  - vb
  name: MemoryKeyManager
  nameWithType: MemoryKeyManager
  fullName: Tide.Ork.Classes.MemoryKeyManager
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/Classes/MemoryKeyManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: MemoryKeyManager
    path: ../../Tide.Ork/Classes/MemoryKeyManager.cs
    startLine: 7
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: 'public class MemoryKeyManager : MemoryManagerBase<KeyVault>, IKeyManager, IManager<KeyVault>'
    content.vb: >-
      Public Class MemoryKeyManager

          Inherits MemoryManagerBase(Of KeyVault)

          Implements IKeyManager, IManager(Of KeyVault)
  inheritance:
  - System.Object
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  implements:
  - Tide.Ork.Classes.IKeyManager
  - Tide.Ork.Classes.IManager{Tide.Core.KeyVault}
  inheritedMembers:
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}._items
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Delete(System.Guid)
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Exist(System.Guid)
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetAll
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetById(System.Guid)
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.SetOrUpdate(Tide.Core.KeyVault)
  - Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetEnumerable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tide.Ork.Classes.MemoryKeyManager.GetAuthShare(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryKeyManager.GetAuthShare(System.Guid)
  id: GetAuthShare(System.Guid)
  parent: Tide.Ork.Classes.MemoryKeyManager
  langs:
  - csharp
  - vb
  name: GetAuthShare(Guid)
  nameWithType: MemoryKeyManager.GetAuthShare(Guid)
  fullName: Tide.Ork.Classes.MemoryKeyManager.GetAuthShare(System.Guid)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/MemoryKeyManager.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetAuthShare
    path: ../../Tide.Ork/Classes/MemoryKeyManager.cs
    startLine: 9
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes
  syntax:
    content: public Task<BigInteger> GetAuthShare(Guid user)
    parameters:
    - id: user
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Numerics.BigInteger}
    content.vb: Public Function GetAuthShare(user As Guid) As Task(Of BigInteger)
  overload: Tide.Ork.Classes.MemoryKeyManager.GetAuthShare*
  implements:
  - Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Tide.Ork.Classes
  commentId: N:Tide.Ork.Classes
  name: Tide.Ork.Classes
  nameWithType: Tide.Ork.Classes
  fullName: Tide.Ork.Classes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  commentId: T:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  parent: Tide.Ork.Classes
  definition: Tide.Ork.Classes.MemoryManagerBase`1
  name: MemoryManagerBase<KeyVault>
  nameWithType: MemoryManagerBase<KeyVault>
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>
  nameWithType.vb: MemoryManagerBase(Of KeyVault)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault)
  name.vb: MemoryManagerBase(Of KeyVault)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1
    name: MemoryManagerBase
    nameWithType: MemoryManagerBase
    fullName: Tide.Ork.Classes.MemoryManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1
    name: MemoryManagerBase
    nameWithType: MemoryManagerBase
    fullName: Tide.Ork.Classes.MemoryManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.IKeyManager
  commentId: T:Tide.Ork.Classes.IKeyManager
  parent: Tide.Ork.Classes
  name: IKeyManager
  nameWithType: IKeyManager
  fullName: Tide.Ork.Classes.IKeyManager
- uid: Tide.Ork.Classes.IManager{Tide.Core.KeyVault}
  commentId: T:Tide.Ork.Classes.IManager{Tide.Core.KeyVault}
  parent: Tide.Ork.Classes
  definition: Tide.Ork.Classes.IManager`1
  name: IManager<KeyVault>
  nameWithType: IManager<KeyVault>
  fullName: Tide.Ork.Classes.IManager<Tide.Core.KeyVault>
  nameWithType.vb: IManager(Of KeyVault)
  fullName.vb: Tide.Ork.Classes.IManager(Of Tide.Core.KeyVault)
  name.vb: IManager(Of KeyVault)
  spec.csharp:
  - uid: Tide.Ork.Classes.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Classes.IManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Classes.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Classes.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}._items
  commentId: F:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}._items
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1._items
  name: _items
  nameWithType: MemoryManagerBase<KeyVault>._items
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>._items
  nameWithType.vb: MemoryManagerBase(Of KeyVault)._items
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault)._items
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Delete(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Delete(System.Guid)
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
  name: Delete(Guid)
  nameWithType: MemoryManagerBase<KeyVault>.Delete(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.Delete(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of KeyVault).Delete(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
    name: Delete
    nameWithType: MemoryManagerBase<KeyVault>.Delete
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
    name: Delete
    nameWithType: MemoryManagerBase(Of KeyVault).Delete
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Exist(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.Exist(System.Guid)
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
  name: Exist(Guid)
  nameWithType: MemoryManagerBase<KeyVault>.Exist(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.Exist(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of KeyVault).Exist(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
    name: Exist
    nameWithType: MemoryManagerBase<KeyVault>.Exist
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
    name: Exist
    nameWithType: MemoryManagerBase(Of KeyVault).Exist
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetAll
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetAll
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
  name: GetAll()
  nameWithType: MemoryManagerBase<KeyVault>.GetAll()
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetAll()
  nameWithType.vb: MemoryManagerBase(Of KeyVault).GetAll()
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
    name: GetAll
    nameWithType: MemoryManagerBase<KeyVault>.GetAll
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
    name: GetAll
    nameWithType: MemoryManagerBase(Of KeyVault).GetAll
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetById(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetById(System.Guid)
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
  name: GetById(Guid)
  nameWithType: MemoryManagerBase<KeyVault>.GetById(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetById(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of KeyVault).GetById(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
    name: GetById
    nameWithType: MemoryManagerBase<KeyVault>.GetById
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
    name: GetById
    nameWithType: MemoryManagerBase(Of KeyVault).GetById
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.SetOrUpdate(Tide.Core.KeyVault)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.SetOrUpdate(Tide.Core.KeyVault)
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
  name: SetOrUpdate(KeyVault)
  nameWithType: MemoryManagerBase<KeyVault>.SetOrUpdate(KeyVault)
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.SetOrUpdate(Tide.Core.KeyVault)
  nameWithType.vb: MemoryManagerBase(Of KeyVault).SetOrUpdate(KeyVault)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).SetOrUpdate(Tide.Core.KeyVault)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: MemoryManagerBase<KeyVault>.SetOrUpdate
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: MemoryManagerBase(Of KeyVault).SetOrUpdate
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tide.Core.KeyVault
    name: KeyVault
    nameWithType: KeyVault
    fullName: Tide.Core.KeyVault
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetEnumerable
  commentId: M:Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}.GetEnumerable
  parent: Tide.Ork.Classes.MemoryManagerBase{Tide.Core.KeyVault}
  definition: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
  name: GetEnumerable()
  nameWithType: MemoryManagerBase<KeyVault>.GetEnumerable()
  fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetEnumerable()
  nameWithType.vb: MemoryManagerBase(Of KeyVault).GetEnumerable()
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetEnumerable()
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
    name: GetEnumerable
    nameWithType: MemoryManagerBase<KeyVault>.GetEnumerable
    fullName: Tide.Ork.Classes.MemoryManagerBase<Tide.Core.KeyVault>.GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
    name: GetEnumerable
    nameWithType: MemoryManagerBase(Of KeyVault).GetEnumerable
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of Tide.Core.KeyVault).GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.Classes.MemoryManagerBase`1
  commentId: T:Tide.Ork.Classes.MemoryManagerBase`1
  name: MemoryManagerBase<T>
  nameWithType: MemoryManagerBase<T>
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>
  nameWithType.vb: MemoryManagerBase(Of T)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T)
  name.vb: MemoryManagerBase(Of T)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1
    name: MemoryManagerBase
    nameWithType: MemoryManagerBase
    fullName: Tide.Ork.Classes.MemoryManagerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1
    name: MemoryManagerBase
    nameWithType: MemoryManagerBase
    fullName: Tide.Ork.Classes.MemoryManagerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.IManager`1
  commentId: T:Tide.Ork.Classes.IManager`1
  name: IManager<T>
  nameWithType: IManager<T>
  fullName: Tide.Ork.Classes.IManager<T>
  nameWithType.vb: IManager(Of T)
  fullName.vb: Tide.Ork.Classes.IManager(Of T)
  name.vb: IManager(Of T)
  spec.csharp:
  - uid: Tide.Ork.Classes.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Classes.IManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tide.Ork.Classes.IManager`1
    name: IManager
    nameWithType: IManager
    fullName: Tide.Ork.Classes.IManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1._items
  commentId: F:Tide.Ork.Classes.MemoryManagerBase`1._items
  name: _items
  nameWithType: MemoryManagerBase<T>._items
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>._items
  nameWithType.vb: MemoryManagerBase(Of T)._items
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T)._items
- uid: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
  isExternal: true
  name: Delete(Guid)
  nameWithType: MemoryManagerBase<T>.Delete(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.Delete(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of T).Delete(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).Delete(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
    name: Delete
    nameWithType: MemoryManagerBase<T>.Delete
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Delete(System.Guid)
    name: Delete
    nameWithType: MemoryManagerBase(Of T).Delete
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
  isExternal: true
  name: Exist(Guid)
  nameWithType: MemoryManagerBase<T>.Exist(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.Exist(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of T).Exist(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).Exist(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
    name: Exist
    nameWithType: MemoryManagerBase<T>.Exist
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.Exist(System.Guid)
    name: Exist
    nameWithType: MemoryManagerBase(Of T).Exist
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).Exist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.GetAll
  name: GetAll()
  nameWithType: MemoryManagerBase<T>.GetAll()
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetAll()
  nameWithType.vb: MemoryManagerBase(Of T).GetAll()
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).GetAll()
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
    name: GetAll
    nameWithType: MemoryManagerBase<T>.GetAll
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetAll
    name: GetAll
    nameWithType: MemoryManagerBase(Of T).GetAll
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
  isExternal: true
  name: GetById(Guid)
  nameWithType: MemoryManagerBase<T>.GetById(Guid)
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetById(System.Guid)
  nameWithType.vb: MemoryManagerBase(Of T).GetById(Guid)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).GetById(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
    name: GetById
    nameWithType: MemoryManagerBase<T>.GetById
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetById(System.Guid)
    name: GetById
    nameWithType: MemoryManagerBase(Of T).GetById
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).GetById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
  name: SetOrUpdate(T)
  nameWithType: MemoryManagerBase<T>.SetOrUpdate(T)
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.SetOrUpdate(T)
  nameWithType.vb: MemoryManagerBase(Of T).SetOrUpdate(T)
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).SetOrUpdate(T)
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: MemoryManagerBase<T>.SetOrUpdate
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.SetOrUpdate(`0)
    name: SetOrUpdate
    nameWithType: MemoryManagerBase(Of T).SetOrUpdate
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).SetOrUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
  commentId: M:Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
  name: GetEnumerable()
  nameWithType: MemoryManagerBase<T>.GetEnumerable()
  fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetEnumerable()
  nameWithType.vb: MemoryManagerBase(Of T).GetEnumerable()
  fullName.vb: Tide.Ork.Classes.MemoryManagerBase(Of T).GetEnumerable()
  spec.csharp:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
    name: GetEnumerable
    nameWithType: MemoryManagerBase<T>.GetEnumerable
    fullName: Tide.Ork.Classes.MemoryManagerBase<T>.GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.MemoryManagerBase`1.GetEnumerable
    name: GetEnumerable
    nameWithType: MemoryManagerBase(Of T).GetEnumerable
    fullName: Tide.Ork.Classes.MemoryManagerBase(Of T).GetEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tide.Ork.Classes.MemoryKeyManager.GetAuthShare*
  commentId: Overload:Tide.Ork.Classes.MemoryKeyManager.GetAuthShare
  name: GetAuthShare
  nameWithType: MemoryKeyManager.GetAuthShare
  fullName: Tide.Ork.Classes.MemoryKeyManager.GetAuthShare
- uid: Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
  commentId: M:Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
  parent: Tide.Ork.Classes.IKeyManager
  isExternal: true
  name: GetAuthShare(Guid)
  nameWithType: IKeyManager.GetAuthShare(Guid)
  fullName: Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
  spec.csharp:
  - uid: Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
    name: GetAuthShare
    nameWithType: IKeyManager.GetAuthShare
    fullName: Tide.Ork.Classes.IKeyManager.GetAuthShare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tide.Ork.Classes.IKeyManager.GetAuthShare(System.Guid)
    name: GetAuthShare
    nameWithType: IKeyManager.GetAuthShare
    fullName: Tide.Ork.Classes.IKeyManager.GetAuthShare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{System.Numerics.BigInteger}
  commentId: T:System.Threading.Tasks.Task{System.Numerics.BigInteger}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BigInteger>
  nameWithType: Task<BigInteger>
  fullName: System.Threading.Tasks.Task<System.Numerics.BigInteger>
  nameWithType.vb: Task(Of BigInteger)
  fullName.vb: System.Threading.Tasks.Task(Of System.Numerics.BigInteger)
  name.vb: Task(Of BigInteger)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
