### YamlMime:ManagedReference
items:
- uid: Tide.Ork.Classes.Rules.OperChecker
  commentId: T:Tide.Ork.Classes.Rules.OperChecker
  id: OperChecker
  parent: Tide.Ork.Classes.Rules
  children:
  - Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  - Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  - Tide.Ork.Classes.Rules.OperChecker.IsLogOper(System.Object)
  - Tide.Ork.Classes.Rules.OperChecker.IsRelOper(System.Object)
  langs:
  - csharp
  - vb
  name: OperChecker
  nameWithType: OperChecker
  fullName: Tide.Ork.Classes.Rules.OperChecker
  type: Class
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/OperChecker.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: OperChecker
    path: ../../Tide.Ork/Classes/Rules/OperChecker.cs
    startLine: 5
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public class OperChecker
    content.vb: Public Class OperChecker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tide.Ork.Classes.Rules.OperChecker.IsRelOper(System.Object)
  commentId: M:Tide.Ork.Classes.Rules.OperChecker.IsRelOper(System.Object)
  id: IsRelOper(System.Object)
  parent: Tide.Ork.Classes.Rules.OperChecker
  langs:
  - csharp
  - vb
  name: IsRelOper(Object)
  nameWithType: OperChecker.IsRelOper(Object)
  fullName: Tide.Ork.Classes.Rules.OperChecker.IsRelOper(System.Object)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/OperChecker.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: IsRelOper
    path: ../../Tide.Ork/Classes/Rules/OperChecker.cs
    startLine: 7
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static bool IsRelOper(object token)
    parameters:
    - id: token
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRelOper(token As Object) As Boolean
  overload: Tide.Ork.Classes.Rules.OperChecker.IsRelOper*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Tide.Ork.Classes.Rules.OperChecker.IsLogOper(System.Object)
  commentId: M:Tide.Ork.Classes.Rules.OperChecker.IsLogOper(System.Object)
  id: IsLogOper(System.Object)
  parent: Tide.Ork.Classes.Rules.OperChecker
  langs:
  - csharp
  - vb
  name: IsLogOper(Object)
  nameWithType: OperChecker.IsLogOper(Object)
  fullName: Tide.Ork.Classes.Rules.OperChecker.IsLogOper(System.Object)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/OperChecker.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: IsLogOper
    path: ../../Tide.Ork/Classes/Rules/OperChecker.cs
    startLine: 11
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static bool IsLogOper(object token)
    parameters:
    - id: token
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsLogOper(token As Object) As Boolean
  overload: Tide.Ork.Classes.Rules.OperChecker.IsLogOper*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  commentId: M:Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  id: GetRelationalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  parent: Tide.Ork.Classes.Rules.OperChecker
  langs:
  - csharp
  - vb
  name: GetRelationalNode(Expression, Object, Expression)
  nameWithType: OperChecker.GetRelationalNode(Expression, Object, Expression)
  fullName: Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode(System.Linq.Expressions.Expression, System.Object, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/OperChecker.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetRelationalNode
    path: ../../Tide.Ork/Classes/Rules/OperChecker.cs
    startLine: 14
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static Expression GetRelationalNode(Expression left, object oper, Expression rigth)
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
    - id: oper
      type: System.Object
    - id: rigth
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetRelationalNode(left As Expression, oper As Object, rigth As Expression) As Expression
  overload: Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  commentId: M:Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  id: GetLogicalNode(System.Linq.Expressions.Expression,System.Object,System.Linq.Expressions.Expression)
  parent: Tide.Ork.Classes.Rules.OperChecker
  langs:
  - csharp
  - vb
  name: GetLogicalNode(Expression, Object, Expression)
  nameWithType: OperChecker.GetLogicalNode(Expression, Object, Expression)
  fullName: Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode(System.Linq.Expressions.Expression, System.Object, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: Tide/Tide.Ork/Classes/Rules/OperChecker.cs
      branch: master
      repo: https://github.com/tide-foundation/Tide-Protocol.git
    id: GetLogicalNode
    path: ../../Tide.Ork/Classes/Rules/OperChecker.cs
    startLine: 32
  assemblies:
  - Tide.Ork
  namespace: Tide.Ork.Classes.Rules
  syntax:
    content: public static Expression GetLogicalNode(Expression left, object oper, Expression rigth)
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
    - id: oper
      type: System.Object
    - id: rigth
      type: System.Linq.Expressions.Expression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Public Shared Function GetLogicalNode(left As Expression, oper As Object, rigth As Expression) As Expression
  overload: Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Tide.Ork.Classes.Rules
  commentId: N:Tide.Ork.Classes.Rules
  name: Tide.Ork.Classes.Rules
  nameWithType: Tide.Ork.Classes.Rules
  fullName: Tide.Ork.Classes.Rules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tide.Ork.Classes.Rules.OperChecker.IsRelOper*
  commentId: Overload:Tide.Ork.Classes.Rules.OperChecker.IsRelOper
  name: IsRelOper
  nameWithType: OperChecker.IsRelOper
  fullName: Tide.Ork.Classes.Rules.OperChecker.IsRelOper
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Tide.Ork.Classes.Rules.OperChecker.IsLogOper*
  commentId: Overload:Tide.Ork.Classes.Rules.OperChecker.IsLogOper
  name: IsLogOper
  nameWithType: OperChecker.IsLogOper
  fullName: Tide.Ork.Classes.Rules.OperChecker.IsLogOper
- uid: Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode*
  commentId: Overload:Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode
  name: GetRelationalNode
  nameWithType: OperChecker.GetRelationalNode
  fullName: Tide.Ork.Classes.Rules.OperChecker.GetRelationalNode
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode*
  commentId: Overload:Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode
  name: GetLogicalNode
  nameWithType: OperChecker.GetLogicalNode
  fullName: Tide.Ork.Classes.Rules.OperChecker.GetLogicalNode
