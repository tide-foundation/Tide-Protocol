title ORK Retirement

note over Ork0, Ork1, Ork2, Ork3, Ork4, Dns
    From Ork0 to Ork3    
end note

note over Ork0
    signedTrnf = sign(orkId0 | orkId3, orkPrv0)
end note

Ork0 ->+ Ork3: Tranfer(orkId0, orkId3, signedTrnf)
Ork3 -->- Ork0: OK

Ork3 ->+ Dns: GetAllOrkList(orkId0, orkId3, signedTrnf)
Dns -->- Ork3: uids, orkLists, signedLists

loop uids, orkLists, signedLists
    Ork3 ->+ Ork0: Ping()
    Ork3 ->+ Ork1: Ping()
    Ork3 ->+ Ork2: Ping()
    Ork3 ->+ Ork4: Ping()
    
    Ork0 -->- Ork3: OK
    Ork1 -->- Ork3: OK
    Ork2 -->- Ork3: OK
    Ork4 -->- Ork3: timeout
    destroy Ork4
note over Ork3: activeList = [orkId0, orkId1, orkId2]
    
    Ork3 ->+ Ork0: Transfer(orkId0, orkId3, signedTrnf, activeList, uid, orkList, signedList)
    Ork3 ->+ Ork1: Transfer(orkId0, orkId3, signedTrnf, activeList, uid, orkList, signedList)
    Ork3 ->+ Ork2: Transfer(orkId0, orkId3, signedTrnf, activeList, uid, orkList, signedList)
    
note over Ork0, Ork1, Ork2
    All Orks compute
    
    isOkSignedTrnf = verify(orkId0 | orkId3, signedTrnf, orkPub0)
    isOkSignedList = verify(orkList, signedList, uidPub)
    iAmOnList = any(signedList, orkIdj => orkIdj == orkIdi))
    isOrkOnList = any(signedList, orkIdj => orkIdj == orkId0))
    
    lagranListi = filter(signedList, orkIdj => orkIdj != orkIdi))
    preInteri = cmkSharei * Lagrangian(orkIdi, lagranListi)

    newList = concat(orkId3, filter(signedList, orkIdj => orkIdj != orkId0))
    cmkiShares = SecretShare(preInteri, newList)
end note

alt isOkSignedTrnf && isOkSignedList && iAmOnList && isOrkOnList
    Ork0 --> Ork1: Share(uid, cmk0Shares[1])
    Ork0 --> Ork2: Share(uid, cmk0Shares[2])
    Ork0 --> Chain: Share(uid, orkId4, encrypt(cmk0Shares[3], orkPub4))
    Chain --> Chain: Store(uid, orkId4, cipherShare0)

    Ork1 --> Ork1: Share(uid, cmk1Shares[1])
    Ork1 --> Ork2: Share(uid, cmk1Shares[2])
    Ork1 --> Chain: Share(uid, orkId4, encrypt(cmk1Shares[3], orkPub4))
    Chain --> Chain: Store(uid, orkId4, cipherShare1)

    Ork2 --> Ork1: Share(uid, cmk2Shares[1])
    Ork2 --> Ork2: Share(uid, cmk2Shares[2])
    Ork2 --> Chain: Share(uid, orkId4, encrypt(cmk2Shares[3], orkPub4))
    Chain --> Chain: Store(uid, orkId4, cipherShare2)
    
    Ork0 -->- Ork3: cmk0Shares[0]
    Ork1 -->- Ork3: cmk1Shares[0]
    Ork2 -->- Ork3: cmk2Shares[0]


note over Ork1, Ork2, Ork3
    All Orks compute
    
    cmkSharei = sum(cmkjShares[i])
end note

    Ork3 ->+ Ork1: TSign(uid, newList)
    Ork3 ->+ Ork2: TSign(uid, newList)

    Ork1 -->- Ork3: signedList1 = TSign(uid, newList, cmkShare1)
    Ork2 -->- Ork3: signedList2 = TSign(uid, newList, cmkShare2)

note over Ork3: signedList = sum(signedList1, signedList2, TSign(uid, newList, cmkShare3))

    Ork3 ->+ Dns: SetOrkList(uid, newList, signedList)
    
alt verify(newList, signedList, uidPub)
    Dns -> Dns: Save(uid, newList)
    Dns -->- Ork3: OK
end
end
end
